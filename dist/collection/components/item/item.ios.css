:root {
  /* font family */
  --med-font-family-brand: "fsemeric";
  --med-font-family-base: "fsemeric";
  /* font size */
  --med-font-size-nano: 10px;
  --med-font-size-xxxs: 12px;
  --med-font-size-xxs: 14px;
  --med-font-size-xs: 16px;
  --med-font-size-sm: 20px;
  --med-font-size-md: 24px;
  --med-font-size-lg: 32px;
  --med-font-size-xl: 40px;
  --med-font-size-xxl: 48px;
  --med-font-size-xxxl: 64px;
  --med-font-size-huge: 96px;
  /* font weight */
  --med-font-weight-thin: 250;
  --med-font-weight-light: 300;
  --med-font-weight-regular: 400;
  --med-font-weight-medium: 500;
  --med-font-weight-semibold: 600;
  --med-font-weight-bold: 700;
  --med-font-weight-extrabold: 800;
  --med-font-weight-heavy: 900;
  /* letter spacing */
  --med-letter-spacing-ultracompressed: -0.04;
  --med-letter-spacing-compressed: -0.02;
  --med-letter-spacing-default: 0;
  --med-letter-spacing-medium: 0.02;
  --med-letter-spacing-expanded: 0.05;
  --med-letter-spacing-distant: 0.1;
  --med-letter-spacing-far: 0.2;
  /* line height */
  --med-line-height-compressed: 100%;
  --med-line-height-default: 24px;
  --med-line-height-double: 200%;
}

:root {
  /* spacing inset */
  --med-spacing-inset-nano: 4px;
  --med-spacing-inset-xs: 8px;
  --med-spacing-inset-sm: 16px;
  --med-spacing-inset-base: 24px;
  --med-spacing-inset-md: 32px;
  --med-spacing-inset-lg: 40px;
  --med-spacing-inset-xl: 48px;
  --med-spacing-inset-xxl: 64px;
  /* spacing squish */
  --med-spacing-squish-nano: 4px 8px;
  --med-spacing-squish-xs: 8px 16px;
  --med-spacing-squish-sm: 8px 24px;
  --med-spacing-squish-base: 8px 32px;
  --med-spacing-squish-md: 16px 24px;
  --med-spacing-squish-lg: 16px 32px;
  --med-spacing-squish-xl: 24px 32px;
  --med-spacing-squish-xxl: 32px 40px;
  /* spacing stretch */
  --med-spacing-stretch-nano: 8px 4px;
  --med-spacing-stretch-xs: 16px 8px;
  --med-spacing-stretch-sm: 24px 8px;
  --med-spacing-stretch-base: 32px 8px;
  --med-spacing-stretch-md: 24px 16px;
  --med-spacing-stretch-lg: 32px 16px;
  --med-spacing-stretch-xl: 32px 24px;
  --med-spacing-stretch-xxl: 40px 32px;
  /* spacing inline */
  --med-spacing-inline-quark: 2px;
  --med-spacing-inline-nano: 4px;
  --med-spacing-inline-xxxs: 8px;
  --med-spacing-inline-base: 16px;
  --med-spacing-inline-xxs: 24px;
  --med-spacing-inline-xs: 32px;
  --med-spacing-inline-sm: 40px;
  --med-spacing-inline-md: 48px;
  --med-spacing-inline-lg: 56px;
  --med-spacing-inline-xl: 64px;
  --med-spacing-inline-xxl: 72px;
  --med-spacing-inline-xxxl: 80px;
  --med-spacing-inline-huge: 120px;
  --med-spacing-inline-ultra: 160px;
  /* spacing stack */
  --med-spacing-stack-quark: 2px;
  --med-spacing-stack-nano: 4px;
  --med-spacing-stack-xxxs: 8px;
  --med-spacing-stack-base: 16px;
  --med-spacing-stack-xxs: 24px;
  --med-spacing-stack-xs: 32px;
  --med-spacing-stack-sm: 40px;
  --med-spacing-stack-md: 48px;
  --med-spacing-stack-lg: 56px;
  --med-spacing-stack-xl: 64px;
  --med-spacing-stack-xxl: 72px;
  --med-spacing-stack-xxxl: 80px;
  --med-spacing-stack-huge: 120px;
  --med-spacing-stack-ultra: 160px;
}

:root {
  --med-border-radius-none: 0;
  --med-border-radius-quark: 2px;
  --med-border-radius-nano: 4px;
  --med-border-radius-sm: 8px;
  --med-border-radius-md: 16px;
  --med-border-radius-lg: 24px;
  --med-border-radius-pill: 31.25em;
  --med-border-radius-full: 50%;
  /* speech bubble */
  --med-border-radius-speech-left-down: 8px 8px 8px 0;
  --med-border-radius-speech-right-down: 8px 8px 0 8px;
  --med-border-radius-speech-right-up: 8px 0 8px 0px;
  --med-border-radius-speech-left-up: 0 8px 8px 0px;
  /* table */
  --med-border-radius-table-down-sm: 0 0 8px 8px;
  --med-border-radius-table-up-sm: 8px 8px 0 0;
  --med-border-radius-table-down-md: 16px 16px 0 0;
  --med-border-radius-table-up-md: 0 0 16px 16px;
  /* border widths */
  --med-border-width-none: 0;
  --med-border-width-quark: 0.25px;
  --med-border-width-nano: 0.5px;
  --med-border-width-hairline: 1px;
  --med-border-width-thin: 2px;
  --med-border-width-thick: 4px;
  --med-border-width-bold: 8px;
  --med-border-width-heavy: 16px;
  /* opacity levels */
  --med-opacity-level-semiopaque: 0.8;
  --med-opacity-level-intense: 0.64;
  --med-opacity-level-half: 0.5;
  --med-opacity-level-medium: 0.32;
  --med-opacity-level-light: 0.16;
  --med-opacity-level-semitransparent: 0.08;
  /* shadow levels */
  --med-shadow-level-0: none;
  --med-shadow-level-1: 0 0 2px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.14), 0 1px 3px rgba(0, 0, 0, 0.2);
  --med-shadow-level-2: 0 2px 4px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-3: 0 3px 3px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-4: 0 0 2px rgba(0, 0, 0, 0.14), 0 4px 5px rgba(0, 0, 0, 0.12), 0 1px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-5: 0 6px 10px rgba(0, 0, 0, 0.14), 0 1px 18px rgba(0, 0, 0, 0.12), 0 3px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-6: 0 8px 10px rgba(0, 0, 0, 0.14), 0 3px 14px rgba(0, 0, 0, 0.12), 0 4px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-7: 0 9px 12px rgba(0, 0, 0, 0.14), 0 3px 16px rgba(0, 0, 0, 0.12), 0 5px 6px rgba(0, 0, 0, 0.2);
  --med-shadow-level-8: 0 12px 17px rgba(0, 0, 0, 0.14), 0 5px 22px rgba(0, 0, 0, 0.12), 0 7px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-9: 0 16px 24px rgba(0, 0, 0, 0.14), 0 6px 30px rgba(0, 0, 0, 0.12), 0 8px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-10: 0 24px 38px rgba(0, 0, 0, 0.14), 0 9px 46px rgba(0, 0, 0, 0.12), 0 11px 15px rgba(0, 0, 0, 0.2);
}

:host {
  /**
   * @prop --background: Background of the item
   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.
   * @prop --background-activated-opacity: Opacity of the item background when pressed
   * @prop --background-focused: Background of the item when focused with the tab key
   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key
   * @prop --background-hover: Background of the item on hover
   * @prop --background-hover-opacity: Opacity of the background of the item on hover
   *
   * @prop --border-color: Color of the item border
   * @prop --border-radius: Radius of the item border
   * @prop --border-style: Style of the item border
   * @prop --border-width: Width of the item border
   *
   * @prop --color: Color of the item
   * @prop --color-activated: Color of the item when pressed
   * @prop --color-focused: Color of the item when focused with the tab key
   * @prop --color-hover: Color of the item on hover
   *
   * @prop --detail-icon-color: Color of the item detail icon
   * @prop --detail-icon-opacity: Opacity of the item detail icon
   * @prop --detail-icon-font-size: Font size of the item detail icon
   *
   * @prop --inner-border-width: Width of the item inner border
   * @prop --inner-box-shadow: Box shadow of the item inner
   * @prop --inner-padding-top: Top padding of the item inner
   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
   * @prop --inner-padding-bottom: Bottom padding of the item inner
   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
   *
   * @prop --min-height: Minimum height of the item
   *
   * @prop --padding-bottom: Bottom padding of the item
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
   * @prop --padding-top: Top padding of the item
   *
   * @prop --transition: Transition of the item
   *
   * @prop --ripple-color: Color of the item ripple effect
   *
   * @prop --highlight-height: The height of the highlight on the item
   * @prop --highlight-color-focused: The color of the highlight on the item when focused
   * @prop --highlight-color-valid: The color of the highlight on the item when valid
   * @prop --highlight-color-invalid: The color of the highlight on the item when invalid
   */
  --border-radius: 0px;
  --border-width: 0px;
  --border-style: solid;
  --padding-top: 0px;
  --padding-bottom: 0px;
  --padding-end: 0px;
  --padding-start: 0px;
  --inner-border-width: 0px;
  --inner-padding-top: 0px;
  --inner-padding-bottom: 0px;
  --inner-padding-start: 0px;
  --inner-padding-end: 0px;
  --inner-box-shadow: none;
  --show-full-highlight: 0;
  --show-inset-highlight: 0;
  --detail-icon-color: initial;
  --detail-icon-font-size: 20px;
  --detail-icon-opacity: 0.25;
  --color-activated: var(--color);
  --color-focused: var(--color);
  --color-hover: var(--color);
  --ripple-color: currentColor;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: block;
  position: relative;
  align-items: center;
  justify-content: space-between;
  outline: none;
  color: var(--color);
  font-family: var(--ion-font-family, inherit);
  text-align: initial;
  text-decoration: none;
  overflow: hidden;
  box-sizing: border-box;
}

:host(.ion-color) .item-native {
  background: var(--ion-color-base);
  color: var(--ion-color-contrast);
}

:host(.ion-color) .item-native,
:host(.ion-color) .item-inner {
  border-color: var(--ion-color-shade);
}

:host(.ion-activated) .item-native {
  color: var(--color-activated);
}
:host(.ion-activated) .item-native::after {
  background: var(--background-activated);
  opacity: var(--background-activated-opacity);
}

:host(.ion-color.ion-activated) .item-native {
  color: var(--ion-color-contrast);
}

:host(.ion-focused) .item-native {
  color: var(--color-focused);
}
:host(.ion-focused) .item-native::after {
  background: var(--background-focused);
  opacity: var(--background-focused-opacity);
}

:host(.ion-color.ion-focused) .item-native {
  color: var(--ion-color-contrast);
}
:host(.ion-color.ion-focused) .item-native::after {
  background: var(--ion-color-contrast);
}

@media (any-hover: hover) {
  :host(.ion-activatable:hover) .item-native {
    color: var(--color-hover);
  }
  :host(.ion-activatable:hover) .item-native::after {
    background: var(--background-hover);
    opacity: var(--background-hover-opacity);
  }

  :host(.ion-color.ion-activatable:hover) .item-native {
    color: var(--ion-color-contrast);
  }
  :host(.ion-color.ion-activatable:hover) .item-native::after {
    background: var(--ion-color-contrast);
  }
}
:host(.item-interactive-disabled:not(.item-multiple-inputs)) {
  cursor: default;
  pointer-events: none;
}

:host(.item-disabled) {
  cursor: default;
  opacity: 0.3;
  pointer-events: none;
}

.item-native {
  border-radius: var(--border-radius);
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));
  padding-right: var(--padding-end);
  padding-top: var(--padding-top);
  padding-bottom: var(--padding-bottom);
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  text-indent: inherit;
  text-overflow: inherit;
  text-transform: inherit;
  text-align: inherit;
  white-space: inherit;
  color: inherit;
  display: flex;
  position: relative;
  align-items: inherit;
  justify-content: inherit;
  width: 100%;
  min-height: var(--min-height);
  transition: var(--transition);
  border-width: var(--border-width);
  border-style: var(--border-style);
  border-color: var(--border-color);
  outline: none;
  background: var(--background);
  overflow: inherit;
  box-sizing: border-box;
  z-index: 1;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .item-native {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));
    padding-inline-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));
    -webkit-padding-end: var(--padding-end);
    padding-inline-end: var(--padding-end);
  }
}

.item-native::-moz-focus-inner {
  border: 0;
}

.item-native::after {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  position: absolute;
  content: "";
  opacity: 0;
  transition: var(--transition);
  z-index: -1;
}

button, a {
  cursor: pointer;
  user-select: none;
  -webkit-user-drag: none;
}

.item-inner {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: var(--inner-padding-start);
  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));
  padding-top: var(--inner-padding-top);
  padding-bottom: var(--inner-padding-bottom);
  display: flex;
  position: relative;
  flex: 1;
  flex-direction: inherit;
  align-items: inherit;
  align-self: stretch;
  min-height: inherit;
  border-width: var(--inner-border-width);
  border-style: var(--border-style);
  border-color: var(--border-color);
  box-shadow: var(--inner-box-shadow);
  overflow: inherit;
  box-sizing: border-box;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .item-inner {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: var(--inner-padding-start);
    padding-inline-start: var(--inner-padding-start);
    -webkit-padding-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));
    padding-inline-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));
  }
}

.item-detail-icon {
  color: var(--detail-icon-color);
  font-size: var(--detail-icon-font-size);
  opacity: var(--detail-icon-opacity);
}

::slotted(ion-icon) {
  font-size: 1.6em;
}

::slotted(ion-button) {
  --margin-top: 0;
  --margin-bottom: 0;
  --margin-start: 0;
  --margin-end: 0;
  z-index: 1;
}

::slotted(ion-label) {
  flex: 1;
}

:host(.item-input) {
  align-items: center;
}

.input-wrapper {
  display: flex;
  flex: 1;
  flex-direction: inherit;
  align-items: inherit;
  align-self: stretch;
  text-overflow: ellipsis;
  overflow: inherit;
  box-sizing: border-box;
}

:host(.item-label-stacked),
:host(.item-label-floating) {
  align-items: start;
}

:host(.item-label-stacked) .input-wrapper,
:host(.item-label-floating) .input-wrapper {
  flex: 1;
  flex-direction: column;
}

.item-highlight,
.item-inner-highlight {
  left: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  background: var(--highlight-background);
  z-index: 1;
}

.item-highlight {
  height: var(--full-highlight-height);
}

.item-inner-highlight {
  height: var(--inset-highlight-height);
}

:host(.item-interactive.item-has-focus),
:host(.item-interactive.ion-touched.ion-invalid) {
  --full-highlight-height: calc(var(--highlight-height) * var(--show-full-highlight));
  --inset-highlight-height: calc(var(--highlight-height) * var(--show-inset-highlight));
}

:host(.item-interactive.item-has-focus) {
  --highlight-background: var(--highlight-color-focused);
}

:host(.item-interactive.ion-valid) {
  --highlight-background: var(--highlight-color-valid);
}

:host(.item-interactive.ion-invalid) {
  --highlight-background: var(--highlight-color-invalid);
}

:host(:not(.item-label)) ::slotted(ion-select) {
  --padding-start: 0;
  max-width: none;
}

:host(.item-label-stacked) ::slotted(ion-select),
:host(.item-label-floating) ::slotted(ion-select) {
  --padding-top: 8px;
  --padding-bottom: 8px;
  --padding-start: 0;
  align-self: stretch;
  width: 100%;
  max-width: 100%;
}

:host(:not(.item-label)) ::slotted(ion-datetime) {
  --padding-start: 0;
}

:host(.item-label-stacked) ::slotted(ion-datetime),
:host(.item-label-floating) ::slotted(ion-datetime) {
  --padding-start: 0;
  width: 100%;
}

:host(.item-multiple-inputs) ::slotted(ion-checkbox),
:host(.item-multiple-inputs) ::slotted(ion-datetime),
:host(.item-multiple-inputs) ::slotted(ion-radio),
:host(.item-multiple-inputs) ::slotted(ion-select) {
  position: relative;
}

:host(.item-textarea) {
  align-items: stretch;
}

::slotted(ion-reorder[slot]) {
  margin-top: 0;
  margin-bottom: 0;
}
ion-ripple-effect {
  color: var(--ripple-color);
}

:host {
  --min-height: 44px;
  --transition: background-color 200ms linear, opacity 200ms linear;
  --padding-start: 20px;
  --inner-padding-end: 10px;
  --inner-border-width: 0px 0px 0.55px 0px;
  --background: var(--ion-item-background, var(--ion-background-color, #fff));
  --background-activated: #000;
  --background-focused: #000;
  --background-hover: currentColor;
  --background-activated-opacity: .12;
  --background-focused-opacity: .15;
  --background-hover-opacity: .04;
  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));
  --color: var(--ion-item-color, var(--ion-text-color, #000));
  --highlight-height: 0;
  --highlight-color-focused: var(--ion-color-primary, #3880ff);
  --highlight-color-valid: var(--ion-color-success, #2dd36f);
  --highlight-color-invalid: var(--ion-color-danger, #eb445a);
  font-size: 17px;
}

:host(.ion-activated) {
  --transition: none;
}

:host(.ion-color.ion-focused) .item-native::after {
  background: #000;
  opacity: 0.15;
}

:host(.ion-color.ion-activated) .item-native::after {
  background: #000;
  opacity: 0.12;
}

:host(.item-interactive) {
  --show-full-highlight: 0;
  --show-inset-highlight: 1;
}

:host(.item-lines-full) {
  --border-width: 0px 0px 0.55px 0px;
  --show-full-highlight: 1;
  --show-inset-highlight: 0;
}

:host(.item-lines-inset) {
  --inner-border-width: 0px 0px 0.55px 0px;
  --show-full-highlight: 0;
  --show-inset-highlight: 1;
}

:host(.item-lines-inset),
:host(.item-lines-none) {
  --border-width: 0px;
  --show-full-highlight: 0;
}

:host(.item-lines-full),
:host(.item-lines-none) {
  --inner-border-width: 0px;
  --show-inset-highlight: 0;
}

::slotted([slot=start]) {
  margin-left: 0;
  margin-right: 20px;
  margin-top: 2px;
  margin-bottom: 2px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted([slot=start]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 0;
    margin-inline-start: 0;
    -webkit-margin-end: 20px;
    margin-inline-end: 20px;
  }
}

::slotted([slot=end]) {
  margin-left: 10px;
  margin-right: 10px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted([slot=end]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 10px;
    margin-inline-start: 10px;
    -webkit-margin-end: 10px;
    margin-inline-end: 10px;
  }
}

::slotted(ion-icon[slot=start]),
::slotted(ion-icon[slot=end]) {
  margin-top: 7px;
  margin-bottom: 7px;
}
::slotted(ion-toggle[slot=start]),
::slotted(ion-toggle[slot=end]) {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
}

:host(.item-label-stacked) ::slotted([slot=end]),
:host(.item-label-floating) ::slotted([slot=end]) {
  margin-top: 7px;
  margin-bottom: 7px;
}
::slotted(.button-small) {
  --padding-top: 0px;
  --padding-bottom: 0px;
  --padding-start: .5em;
  --padding-end: .5em;
  height: 24px;
  font-size: 13px;
}

::slotted(ion-avatar) {
  width: 36px;
  height: 36px;
}

::slotted(ion-thumbnail) {
  width: 56px;
  height: 56px;
}

::slotted(ion-avatar[slot=end]),
::slotted(ion-thumbnail[slot=end]) {
  margin-left: 10px;
  margin-right: 10px;
  margin-top: 10px;
  margin-bottom: 10px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted(ion-avatar[slot=end]),
::slotted(ion-thumbnail[slot=end]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 10px;
    margin-inline-start: 10px;
    -webkit-margin-end: 10px;
    margin-inline-end: 10px;
  }
}

:host(.item-radio) ::slotted(ion-label),
:host(.item-toggle) ::slotted(ion-label) {
  margin-left: 0px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host(.item-radio) ::slotted(ion-label),
:host(.item-toggle) ::slotted(ion-label) {
    margin-left: unset;
    -webkit-margin-start: 0px;
    margin-inline-start: 0px;
  }
}

::slotted(ion-label) {
  margin-left: 0;
  margin-right: 8px;
  margin-top: 10px;
  margin-bottom: 10px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted(ion-label) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 0;
    margin-inline-start: 0;
    -webkit-margin-end: 8px;
    margin-inline-end: 8px;
  }
}

:host(.item-label-floating),
:host(.item-label-stacked) {
  --min-height: 68px;
}

:host(.item-label-stacked) ::slotted(ion-select),
:host(.item-label-floating) ::slotted(ion-select) {
  --padding-top: 8px;
  --padding-bottom: 8px;
  --padding-start: 0px;
}

:host(.item-label-fixed) ::slotted(ion-select),
:host(.item-label-fixed) ::slotted(ion-datetime) {
  --padding-start: 0;
}