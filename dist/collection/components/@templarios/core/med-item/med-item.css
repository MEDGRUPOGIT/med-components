:host {
  --padding: 8px 16px;
  --background: transparent;
  --border-radius: 0;
}

:host {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: block;
  padding: var(--padding);
  position: relative;
  background-color: var(--background);
  outline: none;
  border-radius: var(--border-radius);
}

:host(.med-item--no-padding) {
  --padding: 8px 0;
}

.item-inner {
  display: flex;
  align-items: center;
}

.input-wrapper {
  flex: 1;
}

.item-native {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  text-indent: inherit;
  text-overflow: inherit;
  text-transform: inherit;
  text-align: inherit;
  white-space: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
  background: transparent;
  width: 100%;
  border: 0;
  text-align: left;
  outline: none;
}

.item-native::-moz-focus-inner {
  border: 0;
}

.item-native::after {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  position: absolute;
  content: "";
  opacity: 0;
  z-index: -1;
}

button, a {
  cursor: pointer;
  outline: none;
  user-select: none;
  -webkit-user-drag: none;
}

button:focus {
  outline: none;
}

.item-highlight,
.item-inner-highlight {
  left: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  z-index: 1;
}

:host(.med-item-multiple-inputs) ::slotted(ion-checkbox),
:host(.med-item-multiple-inputs) ::slotted(ion-datetime),
:host(.med-item-multiple-inputs) ::slotted(ion-radio),
:host(.med-item-multiple-inputs) ::slotted(ion-select),
:host(.med-item-multiple-inputs) ::slotted(ion-toggle) {
  position: relative;
}

:host(.med-item-disabled) {
  opacity: 0.5;
  pointer-events: none;
}

::slotted([slot=start]) {
  margin-right: 16px;
}

::slotted([slot=end]) {
  margin-left: 16px;
}

::slotted(ion-icon) {
  stroke: hsl(var(--med-color-neutral-10));
}

:host(.med-color) {
  --background: hsl(var(--med-color-3));
}

:host(.med-color-neutral) {
  --background: hsl(var(--med-color-neutral));
}

:host(.med-color-feedback) {
  --background: hsl(var(--med-color-feedback));
}