:root {
  /* font family */
  --med-font-family-brand: "fsemeric";
  --med-font-family-base: "fsemeric";
  /* font size */
  --med-font-size-nano: 10px;
  --med-font-size-xxxs: 12px;
  --med-font-size-xxs: 14px;
  --med-font-size-xs: 16px;
  --med-font-size-sm: 20px;
  --med-font-size-md: 24px;
  --med-font-size-lg: 32px;
  --med-font-size-xl: 40px;
  --med-font-size-xxl: 48px;
  --med-font-size-xxxl: 64px;
  --med-font-size-huge: 96px;
  /* font weight */
  --med-font-weight-thin: 250;
  --med-font-weight-light: 300;
  --med-font-weight-regular: 400;
  --med-font-weight-medium: 500;
  --med-font-weight-semibold: 600;
  --med-font-weight-bold: 700;
  --med-font-weight-extrabold: 800;
  --med-font-weight-heavy: 900;
  /* letter spacing */
  --med-letter-spacing-ultracompressed: -0.04;
  --med-letter-spacing-compressed: -0.02;
  --med-letter-spacing-default: 0;
  --med-letter-spacing-medium: 0.02;
  --med-letter-spacing-expanded: 0.05;
  --med-letter-spacing-distant: 0.1;
  --med-letter-spacing-far: 0.2;
  /* line height */
  --med-line-height-compressed: 100%;
  --med-line-height-default: 24px;
  --med-line-height-double: 200%;
}

:root {
  /* spacing inset */
  --med-spacing-inset-nano: 4px;
  --med-spacing-inset-xs: 8px;
  --med-spacing-inset-sm: 16px;
  --med-spacing-inset-base: 24px;
  --med-spacing-inset-md: 32px;
  --med-spacing-inset-lg: 40px;
  --med-spacing-inset-xl: 48px;
  --med-spacing-inset-xxl: 64px;
  /* spacing squish */
  --med-spacing-squish-nano: 4px 8px;
  --med-spacing-squish-xs: 8px 16px;
  --med-spacing-squish-sm: 8px 24px;
  --med-spacing-squish-base: 8px 32px;
  --med-spacing-squish-md: 16px 24px;
  --med-spacing-squish-lg: 16px 32px;
  --med-spacing-squish-xl: 24px 32px;
  --med-spacing-squish-xxl: 32px 40px;
  /* spacing stretch */
  --med-spacing-stretch-nano: 8px 4px;
  --med-spacing-stretch-xs: 16px 8px;
  --med-spacing-stretch-sm: 24px 8px;
  --med-spacing-stretch-base: 32px 8px;
  --med-spacing-stretch-md: 24px 16px;
  --med-spacing-stretch-lg: 32px 16px;
  --med-spacing-stretch-xl: 32px 24px;
  --med-spacing-stretch-xxl: 40px 32px;
  /* spacing inline */
  --med-spacing-inline-quark: 2px;
  --med-spacing-inline-nano: 4px;
  --med-spacing-inline-xxxs: 8px;
  --med-spacing-inline-base: 16px;
  --med-spacing-inline-xxs: 24px;
  --med-spacing-inline-xs: 32px;
  --med-spacing-inline-sm: 40px;
  --med-spacing-inline-md: 48px;
  --med-spacing-inline-lg: 56px;
  --med-spacing-inline-xl: 64px;
  --med-spacing-inline-xxl: 72px;
  --med-spacing-inline-xxxl: 80px;
  --med-spacing-inline-huge: 120px;
  --med-spacing-inline-ultra: 160px;
  /* spacing stack */
  --med-spacing-stack-quark: 2px;
  --med-spacing-stack-nano: 4px;
  --med-spacing-stack-xxxs: 8px;
  --med-spacing-stack-base: 16px;
  --med-spacing-stack-xxs: 24px;
  --med-spacing-stack-xs: 32px;
  --med-spacing-stack-sm: 40px;
  --med-spacing-stack-md: 48px;
  --med-spacing-stack-lg: 56px;
  --med-spacing-stack-xl: 64px;
  --med-spacing-stack-xxl: 72px;
  --med-spacing-stack-xxxl: 80px;
  --med-spacing-stack-huge: 120px;
  --med-spacing-stack-ultra: 160px;
}

:root {
  --med-border-radius-none: 0;
  --med-border-radius-quark: 2px;
  --med-border-radius-nano: 4px;
  --med-border-radius-sm: 8px;
  --med-border-radius-md: 16px;
  --med-border-radius-lg: 24px;
  --med-border-radius-pill: 31.25em;
  --med-border-radius-full: 50%;
  /* speech bubble */
  --med-border-radius-speech-left-down: 8px 8px 8px 0;
  --med-border-radius-speech-right-down: 8px 8px 0 8px;
  --med-border-radius-speech-right-up: 8px 0 8px 0px;
  --med-border-radius-speech-left-up: 0 8px 8px 0px;
  /* table */
  --med-border-radius-table-down-sm: 0 0 8px 8px;
  --med-border-radius-table-up-sm: 8px 8px 0 0;
  --med-border-radius-table-down-md: 16px 16px 0 0;
  --med-border-radius-table-up-md: 0 0 16px 16px;
  /* border widths */
  --med-border-width-none: 0;
  --med-border-width-quark: 0.25px;
  --med-border-width-nano: 0.5px;
  --med-border-width-hairline: 1px;
  --med-border-width-thin: 2px;
  --med-border-width-thick: 4px;
  --med-border-width-bold: 8px;
  --med-border-width-heavy: 16px;
  /* opacity levels */
  --med-opacity-level-semiopaque: 0.8;
  --med-opacity-level-intense: 0.64;
  --med-opacity-level-half: 0.5;
  --med-opacity-level-medium: 0.32;
  --med-opacity-level-light: 0.16;
  --med-opacity-level-semitransparent: 0.08;
  /* shadow levels */
  --med-shadow-level-0: none;
  --med-shadow-level-1: 0 0 2px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.14), 0 1px 3px rgba(0, 0, 0, 0.2);
  --med-shadow-level-2: 0 2px 4px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-3: 0 3px 3px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-4: 0 0 2px rgba(0, 0, 0, 0.14), 0 4px 5px rgba(0, 0, 0, 0.12), 0 1px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-5: 0 6px 10px rgba(0, 0, 0, 0.14), 0 1px 18px rgba(0, 0, 0, 0.12), 0 3px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-6: 0 8px 10px rgba(0, 0, 0, 0.14), 0 3px 14px rgba(0, 0, 0, 0.12), 0 4px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-7: 0 9px 12px rgba(0, 0, 0, 0.14), 0 3px 16px rgba(0, 0, 0, 0.12), 0 5px 6px rgba(0, 0, 0, 0.2);
  --med-shadow-level-8: 0 12px 17px rgba(0, 0, 0, 0.14), 0 5px 22px rgba(0, 0, 0, 0.12), 0 7px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-9: 0 16px 24px rgba(0, 0, 0, 0.14), 0 6px 30px rgba(0, 0, 0, 0.12), 0 8px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-10: 0 24px 38px rgba(0, 0, 0, 0.14), 0 9px 46px rgba(0, 0, 0, 0.12), 0 11px 15px rgba(0, 0, 0, 0.2);
}

:host {
  /**
   * @prop --bar-background: Background of the range bar
   * @prop --bar-background-active: Background of the active range bar
   * @prop --bar-height: Height of the range bar
   * @prop --bar-border-radius: Border radius of the range bar
   * @prop --height: Height of the range
   * @prop --knob-background: Background of the range knob
   * @prop --knob-border-radius: Border radius of the range knob
   * @prop --knob-box-shadow: Box shadow of the range knob
   * @prop --knob-size: Size of the range knob
   * @prop --pin-background: Background of the range pin
   * @prop --pin-color: Color of the range pin
   */
  --knob-handle-size: calc(var(--knob-size) * 2);
  display: flex;
  position: relative;
  flex: 3;
  align-items: center;
  font-family: var(--ion-font-family, inherit);
  user-select: none;
  z-index: 2;
}

:host(.range-disabled) {
  pointer-events: none;
}

::slotted(ion-label) {
  flex: initial;
}

::slotted(ion-icon[slot]) {
  font-size: 24px;
}

.range-slider {
  position: relative;
  flex: 1;
  width: 100%;
  height: var(--height);
  contain: size layout style;
  cursor: grab;
  touch-action: pan-y;
}

:host(.range-pressed) .range-slider {
  cursor: grabbing;
}

.range-pin {
  position: absolute;
  background: var(--ion-color-base);
  color: var(--ion-color-contrast);
  text-align: center;
  box-sizing: border-box;
}

.range-knob-handle {
  left: 0;
  top: calc((var(--height) - var(--knob-handle-size)) / 2);
  margin-left: calc(0px - var(--knob-handle-size) / 2);
  position: absolute;
  width: var(--knob-handle-size);
  height: var(--knob-handle-size);
  text-align: center;
}
[dir=rtl] .range-knob-handle, :host-context([dir=rtl]) .range-knob-handle {
  left: unset;
  right: unset;
  right: 0;
}

@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .range-knob-handle {
    margin-left: unset;
    -webkit-margin-start: calc(0px - var(--knob-handle-size) / 2);
    margin-inline-start: calc(0px - var(--knob-handle-size) / 2);
  }
}
[dir=rtl] .range-knob-handle, :host-context([dir=rtl]) .range-knob-handle {
  /* stylelint-disable-next-line property-blacklist */
  left: unset;
}

.range-knob-handle:active, .range-knob-handle:focus {
  outline: none;
}

.range-bar {
  border-radius: var(--bar-border-radius);
  left: 0;
  top: calc((var(--height) - var(--bar-height)) / 2);
  position: absolute;
  width: 100%;
  height: var(--bar-height);
  background: var(--bar-background);
  pointer-events: none;
}
[dir=rtl] .range-bar, :host-context([dir=rtl]) .range-bar {
  left: unset;
  right: unset;
  right: 0;
}

[dir=rtl] .range-bar, :host-context([dir=rtl]) .range-bar {
  /* stylelint-disable-next-line property-blacklist */
  left: unset;
}

.range-knob {
  border-radius: var(--knob-border-radius);
  left: calc(50% - var(--knob-size) / 2);
  top: calc(50% - var(--knob-size) / 2);
  position: absolute;
  width: var(--knob-size);
  height: var(--knob-size);
  background: var(--knob-background);
  box-shadow: var(--knob-box-shadow);
  z-index: 2;
  pointer-events: none;
}
[dir=rtl] .range-knob, :host-context([dir=rtl]) .range-knob {
  left: unset;
  right: unset;
  right: calc(50% - var(--knob-size) / 2);
}

[dir=rtl] .range-knob, :host-context([dir=rtl]) .range-knob {
  /* stylelint-disable-next-line property-blacklist */
  left: unset;
}

:host(.range-pressed) .range-bar-active {
  will-change: left, right;
}

:host(.in-item) {
  width: 100%;
}

:host(.in-item) ::slotted(ion-label) {
  align-self: center;
}

:host {
  --knob-border-radius: 50%;
  --knob-background: var(--bar-background-active);
  --knob-box-shadow: none;
  --knob-size: 18px;
  --bar-height: 2px;
  --bar-background: rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.26);
  --bar-background-active: var(--ion-color-primary, #3880ff);
  --bar-border-radius: 0;
  --height: 42px;
  --pin-background: var(--ion-color-primary, #3880ff);
  --pin-color: var(--ion-color-primary-contrast, #fff);
  padding-left: 14px;
  padding-right: 14px;
  padding-top: 8px;
  padding-bottom: 8px;
  font-size: 12px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 14px;
    padding-inline-start: 14px;
    -webkit-padding-end: 14px;
    padding-inline-end: 14px;
  }
}

:host(.ion-color) .range-bar {
  background: rgba(var(--ion-color-base-rgb), 0.26);
}

:host(.ion-color) .range-bar-active,
:host(.ion-color) .range-knob,
:host(.ion-color) .range-pin,
:host(.ion-color) .range-pin::before,
:host(.ion-color) .range-tick {
  background: var(--ion-color-base);
  color: var(--ion-color-contrast);
}

::slotted([slot=start]) {
  margin-left: 0;
  margin-right: 14px;
  margin-top: 0;
  margin-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted([slot=start]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 0;
    margin-inline-start: 0;
    -webkit-margin-end: 14px;
    margin-inline-end: 14px;
  }
}

::slotted([slot=end]) {
  margin-left: 14px;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted([slot=end]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 14px;
    margin-inline-start: 14px;
    -webkit-margin-end: 0;
    margin-inline-end: 0;
  }
}

:host(.range-has-pin) {
  padding-top: 28px;
}
.range-bar-active {
  bottom: 0;
  width: auto;
  background: var(--bar-background-active);
}

.range-knob {
  transform: scale(0.67);
  transition-duration: 120ms;
  transition-property: transform, background-color, border;
  transition-timing-function: ease;
  z-index: 2;
}

.range-tick {
  position: absolute;
  top: calc((var(--height) - var(--bar-height)) / 2);
  width: var(--bar-height);
  height: var(--bar-height);
  background: var(--bar-background-active);
  z-index: 1;
  pointer-events: none;
}

.range-tick-active {
  background: transparent;
}

.range-pin {
  padding-left: 0;
  padding-right: 0;
  padding-top: 8px;
  padding-bottom: 8px;
  border-radius: 50%;
  transform: translate3d(0,  0,  0) scale(0.01);
  display: inline-block;
  position: relative;
  min-width: 28px;
  height: 28px;
  transition: transform 120ms ease, background 120ms ease;
  background: var(--pin-background);
  color: var(--pin-color);
  text-align: center;
}
.range-pin::before {
  left: 50%;
  top: 3px;
  margin-left: -13px;
  /* stylelint-disable-next-line property-blacklist */
  border-radius: 50% 50% 50% 0;
  position: absolute;
  width: 26px;
  height: 26px;
  transform: rotate(-45deg);
  transition: background 120ms ease;
  background: var(--pin-background);
  content: "";
  z-index: -1;
}
[dir=rtl] .range-pin::before, :host-context([dir=rtl]) .range-pin::before {
  left: unset;
  right: unset;
  right: 50%;
}

@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .range-pin::before {
    margin-left: unset;
    -webkit-margin-start: -13px;
    margin-inline-start: -13px;
  }
}
[dir=rtl] .range-pin::before, :host-context([dir=rtl]) .range-pin::before {
  /* stylelint-disable-next-line property-blacklist */
  left: unset;
}

.range-knob-pressed .range-pin {
  transform: translate3d(0,  -24px,  0) scale(1);
}

:host(:not(.range-has-pin)) .range-knob-pressed .range-knob {
  transform: scale(1);
}

:host(.range-disabled) .range-bar-active,
:host(.range-disabled) .range-bar,
:host(.range-disabled) .range-tick {
  background-color: var(--ion-color-step-250, #bfbfbf);
}

:host(.range-disabled) .range-knob {
  transform: scale(0.55);
  outline: 5px solid #fff;
  background-color: var(--ion-color-step-250, #bfbfbf);
}

:host {
  --bar-background: hsl(var(--med-color-neutral-8));
  --bar-background-active: hsl(var(--med-color-brand-4));
  padding: 0;
}

::slotted([slot=start]) {
  stroke: hsl(var(--med-color-neutral-8));
}

::slotted([slot=end]) {
  stroke: hsl(var(--med-color-neutral-8));
}