:root {
  /* font family */
  --med-font-family-brand: "fsemeric";
  --med-font-family-base: "fsemeric";
  /* font size */
  --med-font-size-nano: 10px;
  --med-font-size-xxxs: 12px;
  --med-font-size-xxs: 14px;
  --med-font-size-xs: 16px;
  --med-font-size-sm: 20px;
  --med-font-size-md: 24px;
  --med-font-size-lg: 32px;
  --med-font-size-xl: 40px;
  --med-font-size-xxl: 48px;
  --med-font-size-xxxl: 64px;
  --med-font-size-huge: 96px;
  /* font weight */
  --med-font-weight-thin: 250;
  --med-font-weight-light: 300;
  --med-font-weight-regular: 400;
  --med-font-weight-medium: 500;
  --med-font-weight-semibold: 600;
  --med-font-weight-bold: 700;
  --med-font-weight-extrabold: 800;
  --med-font-weight-heavy: 900;
  /* letter spacing */
  --med-letter-spacing-ultracompressed: -0.04;
  --med-letter-spacing-compressed: -0.02;
  --med-letter-spacing-default: 0;
  --med-letter-spacing-medium: 0.02;
  --med-letter-spacing-expanded: 0.05;
  --med-letter-spacing-distant: 0.1;
  --med-letter-spacing-far: 0.2;
  /* line height */
  --med-line-height-compressed: 100%;
  --med-line-height-default: 24px;
  --med-line-height-double: 200%;
}

:root {
  /* spacing inset */
  --med-spacing-inset-nano: 4px;
  --med-spacing-inset-xs: 8px;
  --med-spacing-inset-sm: 16px;
  --med-spacing-inset-base: 24px;
  --med-spacing-inset-md: 32px;
  --med-spacing-inset-lg: 40px;
  --med-spacing-inset-xl: 48px;
  --med-spacing-inset-xxl: 64px;
  /* spacing squish */
  --med-spacing-squish-nano: 4px 8px;
  --med-spacing-squish-xs: 8px 16px;
  --med-spacing-squish-sm: 8px 24px;
  --med-spacing-squish-base: 8px 32px;
  --med-spacing-squish-md: 16px 24px;
  --med-spacing-squish-lg: 16px 32px;
  --med-spacing-squish-xl: 24px 32px;
  --med-spacing-squish-xxl: 32px 40px;
  /* spacing stretch */
  --med-spacing-stretch-nano: 8px 4px;
  --med-spacing-stretch-xs: 16px 8px;
  --med-spacing-stretch-sm: 24px 8px;
  --med-spacing-stretch-base: 32px 8px;
  --med-spacing-stretch-md: 24px 16px;
  --med-spacing-stretch-lg: 32px 16px;
  --med-spacing-stretch-xl: 32px 24px;
  --med-spacing-stretch-xxl: 40px 32px;
  /* spacing inline */
  --med-spacing-inline-quark: 2px;
  --med-spacing-inline-nano: 4px;
  --med-spacing-inline-xxxs: 8px;
  --med-spacing-inline-base: 16px;
  --med-spacing-inline-xxs: 24px;
  --med-spacing-inline-xs: 32px;
  --med-spacing-inline-sm: 40px;
  --med-spacing-inline-md: 48px;
  --med-spacing-inline-lg: 56px;
  --med-spacing-inline-xl: 64px;
  --med-spacing-inline-xxl: 72px;
  --med-spacing-inline-xxxl: 80px;
  --med-spacing-inline-huge: 120px;
  --med-spacing-inline-ultra: 160px;
  /* spacing stack */
  --med-spacing-stack-quark: 2px;
  --med-spacing-stack-nano: 4px;
  --med-spacing-stack-xxxs: 8px;
  --med-spacing-stack-base: 16px;
  --med-spacing-stack-xxs: 24px;
  --med-spacing-stack-xs: 32px;
  --med-spacing-stack-sm: 40px;
  --med-spacing-stack-md: 48px;
  --med-spacing-stack-lg: 56px;
  --med-spacing-stack-xl: 64px;
  --med-spacing-stack-xxl: 72px;
  --med-spacing-stack-xxxl: 80px;
  --med-spacing-stack-huge: 120px;
  --med-spacing-stack-ultra: 160px;
}

:root {
  --med-border-radius-none: 0;
  --med-border-radius-quark: 2px;
  --med-border-radius-nano: 4px;
  --med-border-radius-sm: 8px;
  --med-border-radius-md: 16px;
  --med-border-radius-lg: 24px;
  --med-border-radius-pill: 31.25em;
  --med-border-radius-full: 50%;
  /* speech bubble */
  --med-border-radius-speech-left-down: 8px 8px 8px 0;
  --med-border-radius-speech-right-down: 8px 8px 0 8px;
  --med-border-radius-speech-right-up: 8px 0 8px 0px;
  --med-border-radius-speech-left-up: 0 8px 8px 0px;
  /* table */
  --med-border-radius-table-down-sm: 0 0 8px 8px;
  --med-border-radius-table-up-sm: 8px 8px 0 0;
  --med-border-radius-table-down-md: 16px 16px 0 0;
  --med-border-radius-table-up-md: 0 0 16px 16px;
  /* border widths */
  --med-border-width-none: 0;
  --med-border-width-quark: 0.25px;
  --med-border-width-nano: 0.5px;
  --med-border-width-hairline: 1px;
  --med-border-width-thin: 2px;
  --med-border-width-thick: 4px;
  --med-border-width-bold: 8px;
  --med-border-width-heavy: 16px;
  /* opacity levels */
  --med-opacity-level-semiopaque: 0.8;
  --med-opacity-level-intense: 0.64;
  --med-opacity-level-half: 0.5;
  --med-opacity-level-medium: 0.32;
  --med-opacity-level-light: 0.16;
  --med-opacity-level-semitransparent: 0.08;
  /* shadow levels */
  --med-shadow-level-0: none;
  --med-shadow-level-1: 0 0 2px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.14), 0 1px 3px rgba(0, 0, 0, 0.2);
  --med-shadow-level-2: 0 2px 4px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-3: 0 3px 3px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-4: 0 0 2px rgba(0, 0, 0, 0.14), 0 4px 5px rgba(0, 0, 0, 0.12), 0 1px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-5: 0 6px 10px rgba(0, 0, 0, 0.14), 0 1px 18px rgba(0, 0, 0, 0.12), 0 3px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-6: 0 8px 10px rgba(0, 0, 0, 0.14), 0 3px 14px rgba(0, 0, 0, 0.12), 0 4px 5px rgba(0, 0, 0, 0.2);
  --med-shadow-level-7: 0 9px 12px rgba(0, 0, 0, 0.14), 0 3px 16px rgba(0, 0, 0, 0.12), 0 5px 6px rgba(0, 0, 0, 0.2);
  --med-shadow-level-8: 0 12px 17px rgba(0, 0, 0, 0.14), 0 5px 22px rgba(0, 0, 0, 0.12), 0 7px 8px rgba(0, 0, 0, 0.2);
  --med-shadow-level-9: 0 16px 24px rgba(0, 0, 0, 0.14), 0 6px 30px rgba(0, 0, 0, 0.12), 0 8px 10px rgba(0, 0, 0, 0.2);
  --med-shadow-level-10: 0 24px 38px rgba(0, 0, 0, 0.14), 0 9px 46px rgba(0, 0, 0, 0.12), 0 11px 15px rgba(0, 0, 0, 0.2);
}

:host {
  /**
    * @prop --background: Background of the button
    * @prop --background-focused: Background of the button when focused with the tab key
    * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key
    * @prop --background-hover: Background of the button on hover
    * @prop --background-hover-opacity: Opacity of the background on hover
    *
    * @prop --color: Text color of the button
    * @prop --color-focused: Text color of the button when focused with the tab key
    * @prop --color-hover: Text color of the button on hover
    *
    * @prop --min-width: Minimum width of the button
    * @prop --min-height: Minimum height of the button
    *
    * @prop --transition: Transition of the button
    *
    * @prop --border-radius: Border radius of the button
    *
    * @prop --ripple-color: Color of the button ripple effect
    *
    * @prop --opacity: Opacity of the button
    *
    * @prop --margin-top: Top margin of the button
    * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button
    * @prop --margin-bottom: Bottom margin of the button
    * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button
    *
    * @prop --padding-top: Top padding of the button
    * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
    * @prop --padding-bottom: Bottom padding of the button
    * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
    *
    * @prop --icon-margin-top: Top margin of the button icon
    * @prop --icon-margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon
    * @prop --icon-margin-bottom: Bottom margin of the button icon
    * @prop --icon-margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon
    *
    * @prop --icon-padding-top: Top padding of the button icon
    * @prop --icon-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon
    * @prop --icon-padding-bottom: Bottom padding of the button icon
    * @prop --icon-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon
    *
    * @prop --icon-font-size: Font size of the button icon
    * @prop --icon-font-weight: Font weight of the button icon
    */
  --background: transparent;
  --color-focused: currentColor;
  --color-hover: currentColor;
  --icon-margin-top: 0;
  --icon-margin-bottom: 0;
  --icon-padding-top: 0;
  --icon-padding-end: 0;
  --icon-padding-bottom: 0;
  --icon-padding-start: 0;
  --margin-top: 0;
  --margin-end: 0;
  --margin-bottom: 0;
  --margin-start: 0;
  --min-width: auto;
  --min-height: auto;
  --padding-top: 0;
  --padding-end: 0;
  --padding-bottom: 0;
  --padding-start: 0;
  --opacity: 1;
  --ripple-color: currentColor;
  --transition: background-color, opacity 100ms linear;
  display: none;
  min-width: var(--min-width);
  min-height: var(--min-height);
  color: var(--color);
  font-family: var(--ion-font-family, inherit);
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  text-transform: none;
  white-space: nowrap;
  user-select: none;
  font-kerning: none;
}

:host(.ion-color) .button-native {
  color: var(--ion-color-base);
}

:host(.show-back-button) {
  display: block;
}

:host(.back-button-disabled) {
  cursor: default;
  opacity: 0.5;
  pointer-events: none;
}

.button-native {
  border-radius: var(--border-radius);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  margin-left: var(--margin-start);
  margin-right: var(--margin-end);
  margin-top: var(--margin-top);
  margin-bottom: var(--margin-bottom);
  padding-left: var(--padding-start);
  padding-right: var(--padding-end);
  padding-top: var(--padding-top);
  padding-bottom: var(--padding-bottom);
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  text-indent: inherit;
  text-overflow: inherit;
  text-transform: inherit;
  text-align: inherit;
  white-space: inherit;
  color: inherit;
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
  min-height: inherit;
  transition: var(--transition);
  border: 0;
  outline: none;
  background: var(--background);
  line-height: 1;
  cursor: pointer;
  opacity: var(--opacity);
  overflow: hidden;
  user-select: none;
  z-index: 0;
  appearance: none;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .button-native {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: var(--margin-start);
    margin-inline-start: var(--margin-start);
    -webkit-margin-end: var(--margin-end);
    margin-inline-end: var(--margin-end);
  }
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .button-native {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: var(--padding-start);
    padding-inline-start: var(--padding-start);
    -webkit-padding-end: var(--padding-end);
    padding-inline-end: var(--padding-end);
  }
}

.button-inner {
  display: flex;
  position: relative;
  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  z-index: 1;
}

ion-icon {
  padding-left: var(--icon-padding-start);
  padding-right: var(--icon-padding-end);
  padding-top: var(--icon-padding-top);
  padding-bottom: var(--icon-padding-bottom);
  margin-left: var(--icon-margin-start);
  margin-right: var(--icon-margin-end);
  margin-top: var(--icon-margin-top);
  margin-bottom: var(--icon-margin-bottom);
  display: inherit;
  font-size: var(--icon-font-size);
  font-weight: var(--icon-font-weight);
  pointer-events: none;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ion-icon {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: var(--icon-padding-start);
    padding-inline-start: var(--icon-padding-start);
    -webkit-padding-end: var(--icon-padding-end);
    padding-inline-end: var(--icon-padding-end);
  }
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ion-icon {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: var(--icon-margin-start);
    margin-inline-start: var(--icon-margin-start);
    -webkit-margin-end: var(--icon-margin-end);
    margin-inline-end: var(--icon-margin-end);
  }
}

:host(.ion-focused) .button-native {
  color: var(--color-focused);
}
:host(.ion-focused) .button-native::after {
  background: var(--background-focused);
  opacity: var(--background-focused-opacity);
}

.button-native::after {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  position: absolute;
  content: "";
  opacity: 0;
}

@media (any-hover: hover) {
  :host(:hover) .button-native {
    color: var(--color-hover);
  }
  :host(:hover) .button-native::after {
    background: var(--background-hover);
    opacity: var(--background-hover-opacity);
  }
}
:host(.ion-color.ion-focused) .button-native {
  color: var(--ion-color-base);
}

@media (any-hover: hover) {
  :host(.ion-color:hover) .button-native {
    color: var(--ion-color-base);
  }
}
:host(.in-toolbar:not(.in-toolbar-color)) {
  color: var(--ion-toolbar-color, var(--color));
}

:host {
  --border-radius: 4px;
  --background-focused: currentColor;
  --background-focused-opacity: .12;
  --background-hover: currentColor;
  --background-hover-opacity: 0.04;
  --color: currentColor;
  --icon-margin-end: 0;
  --icon-margin-start: 0;
  --icon-font-size: 24px;
  --icon-font-weight: normal;
  --min-height: 32px;
  --min-width: 44px;
  --padding-start: 12px;
  --padding-end: 12px;
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
}

:host(.back-button-has-icon-only) {
  --border-radius: 50%;
  min-width: 48px;
  height: 48px;
}

.button-native {
  box-shadow: none;
}

.button-text {
  padding-left: 4px;
  padding-right: 4px;
  padding-top: 0;
  padding-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .button-text {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 4px;
    padding-inline-start: 4px;
    -webkit-padding-end: 4px;
    padding-inline-end: 4px;
  }
}

ion-icon {
  line-height: 0.67;
  text-align: start;
}

@media (any-hover: hover) {
  :host(.ion-color:hover) .button-native::after {
    background: var(--ion-color-base);
  }
}
:host(.ion-color.ion-focused) .button-native::after {
  background: var(--ion-color-base);
}