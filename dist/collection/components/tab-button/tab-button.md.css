:host {
  /**
   * @prop --background: Background of the tab button
   * @prop --background-focused: Background of the tab button when focused with the tab key
   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key
   *
   * @prop --color: Color of the tab button
   * @prop --color-focused: Color of the tab button when focused with the tab key
   * @prop --color-selected: Color of the selected tab button
   *
   * @prop --padding-top: Top padding of the tab button
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button
   * @prop --padding-bottom: Bottom padding of the tab button
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button
   *
   * @prop --ripple-color: Color of the button ripple effect
   */
  --ripple-color: var(--color-selected);
  --background-focused-opacity: 1;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  outline: none;
  background: var(--background);
  color: var(--color);
}

.button-native {
  border-radius: inherit;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: var(--padding-start);
  padding-right: var(--padding-end);
  padding-top: var(--padding-top);
  padding-bottom: var(--padding-bottom);
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  text-indent: inherit;
  text-overflow: inherit;
  text-transform: inherit;
  text-align: inherit;
  white-space: inherit;
  color: inherit;
  display: flex;
  position: relative;
  flex-direction: inherit;
  align-items: inherit;
  justify-content: inherit;
  width: 100%;
  height: 100%;
  border: 0;
  outline: none;
  background: transparent;
  text-decoration: none;
  cursor: pointer;
  overflow: hidden;
  box-sizing: border-box;
  -webkit-user-drag: none;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .button-native {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: var(--padding-start);
    padding-inline-start: var(--padding-start);
    -webkit-padding-end: var(--padding-end);
    padding-inline-end: var(--padding-end);
  }
}

.button-native::after {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  position: absolute;
  content: "";
  opacity: 0;
}

.button-inner {
  display: flex;
  position: relative;
  flex-flow: inherit;
  align-items: inherit;
  justify-content: inherit;
  width: 100%;
  height: 100%;
  z-index: 1;
}

:host(.ion-focused) .button-native {
  color: var(--color-focused);
}
:host(.ion-focused) .button-native::after {
  background: var(--background-focused);
  opacity: var(--background-focused-opacity);
}

@media (any-hover: hover) {
  a:hover {
    color: var(--color-selected);
  }
}
:host(.tab-selected) {
  color: var(--color-selected);
}

:host(.tab-hidden) {
  /* stylelint-disable-next-line declaration-no-important */
  display: none !important;
}

:host(.tab-disabled) {
  pointer-events: none;
  opacity: 0.4;
}

::slotted(ion-label),
::slotted(ion-icon) {
  display: block;
  align-self: center;
  max-width: 100%;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
}

::slotted(ion-label) {
  order: 0;
}

::slotted(ion-icon) {
  order: -1;
  height: 1em;
}

:host(.tab-has-label-only) ::slotted(ion-label) {
  white-space: normal;
}

::slotted(ion-badge) {
  box-sizing: border-box;
  position: absolute;
  z-index: 1;
}

:host(.tab-layout-icon-start) {
  flex-direction: row;
}

:host(.tab-layout-icon-end) {
  flex-direction: row-reverse;
}

:host(.tab-layout-icon-bottom) {
  flex-direction: column-reverse;
}

:host(.tab-layout-icon-hide) ::slotted(ion-icon) {
  display: none;
}

:host(.tab-layout-label-hide) ::slotted(ion-label) {
  display: none;
}

ion-ripple-effect {
  color: var(--ripple-color);
}

:host {
  --padding-top: 0;
  --padding-end: 12px;
  --padding-bottom: 0;
  --padding-start: 12px;
  max-width: 168px;
  font-size: 12px;
  font-weight: normal;
  letter-spacing: 0.03em;
}

::slotted(ion-label) {
  margin-left: 0;
  margin-right: 0;
  margin-top: 2px;
  margin-bottom: 2px;
  text-transform: none;
}

::slotted(ion-icon) {
  margin-left: 0;
  margin-right: 0;
  margin-top: 16px;
  margin-bottom: 16px;
  transform-origin: center center;
  font-size: 22px;
}
[dir=rtl] ::slotted(ion-icon), :host-context([dir=rtl]) ::slotted(ion-icon) {
  transform-origin: calc(100% - center) center;
}

::slotted(ion-badge) {
  border-radius: 8px;
  padding-left: 2px;
  padding-right: 2px;
  padding-top: 3px;
  padding-bottom: 2px;
  left: calc(50% + 6px);
  top: 8px;
  min-width: 12px;
  font-size: 8px;
  font-weight: normal;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  ::slotted(ion-badge) {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 2px;
    padding-inline-start: 2px;
    -webkit-padding-end: 2px;
    padding-inline-end: 2px;
  }
}
[dir=rtl] ::slotted(ion-badge), :host-context([dir=rtl]) ::slotted(ion-badge) {
  left: unset;
  right: unset;
  right: calc(50% + 6px);
}

::slotted(ion-badge:empty) {
  display: block;
  min-width: 8px;
  height: 8px;
}

:host(.tab-layout-icon-top) ::slotted(ion-icon) {
  margin-top: 6px;
  margin-bottom: 2px;
}
:host(.tab-layout-icon-top) ::slotted(ion-label) {
  margin-top: 0;
  margin-bottom: 6px;
}
:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {
  left: 70%;
  top: 8px;
}
:host-context([dir=rtl]):host(.tab-layout-icon-bottom) ::slotted(ion-badge), :host-context([dir=rtl]).tab-layout-icon-bottom ::slotted(ion-badge) {
  left: unset;
  right: unset;
  right: 70%;
}

:host(.tab-layout-icon-bottom) ::slotted(ion-icon) {
  margin-top: 0;
  margin-bottom: 6px;
}
:host(.tab-layout-icon-bottom) ::slotted(ion-label) {
  margin-top: 6px;
  margin-bottom: 0;
}
:host(.tab-layout-icon-start) ::slotted(ion-badge),
:host(.tab-layout-icon-end) ::slotted(ion-badge) {
  left: 80%;
  top: 16px;
}
:host-context([dir=rtl]):host(.tab-layout-icon-start) ::slotted(ion-badge), :host-context([dir=rtl]).tab-layout-icon-start ::slotted(ion-badge), :host-context([dir=rtl]):host(.tab-layout-icon-end) ::slotted(ion-badge), :host-context([dir=rtl]).tab-layout-icon-end ::slotted(ion-badge) {
  left: unset;
  right: unset;
  right: 80%;
}

:host(.tab-layout-icon-start) ::slotted(ion-icon) {
  margin-right: 6px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host(.tab-layout-icon-start) ::slotted(ion-icon) {
    margin-right: unset;
    -webkit-margin-end: 6px;
    margin-inline-end: 6px;
  }
}

:host(.tab-layout-icon-end) ::slotted(ion-icon) {
  margin-left: 6px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host(.tab-layout-icon-end) ::slotted(ion-icon) {
    margin-left: unset;
    -webkit-margin-start: 6px;
    margin-inline-start: 6px;
  }
}

:host(.tab-layout-icon-hide) ::slotted(ion-badge),
:host(.tab-has-label-only) ::slotted(ion-badge) {
  left: 70%;
  top: 16px;
}
:host-context([dir=rtl]):host(.tab-layout-icon-hide) ::slotted(ion-badge), :host-context([dir=rtl]).tab-layout-icon-hide ::slotted(ion-badge), :host-context([dir=rtl]):host(.tab-has-label-only) ::slotted(ion-badge), :host-context([dir=rtl]).tab-has-label-only ::slotted(ion-badge) {
  left: unset;
  right: unset;
  right: 70%;
}

:host(.tab-layout-icon-hide) ::slotted(ion-label),
:host(.tab-has-label-only) ::slotted(ion-label) {
  margin-top: 0;
  margin-bottom: 0;
}
:host(.tab-layout-label-hide) ::slotted(ion-badge),
:host(.tab-has-icon-only) ::slotted(ion-badge) {
  top: 16px;
}

:host(.tab-layout-label-hide) ::slotted(ion-icon),
:host(.tab-has-icon-only) ::slotted(ion-icon) {
  margin-top: 0;
  margin-bottom: 0;
  font-size: 24px;
}
:host {
  --color: hsl(var(--med-color-neutral-3));
  --color-hover: hsl(var(--med-color-neutral-5));
  --color-focused: hsl(var(--med-color-neutral-5));
  --color-selected: hsl(var(--med-color-brand-4));
  --background-focused: transparent;
  transition: color 300ms ease-out, stroke 300ms ease-out;
  justify-content: flex-start;
  max-width: 56px;
  margin: 0 var(--padding-gap);
}
@media (min-width: 992px) {
  :host {
    flex-direction: row;
    justify-content: center;
    align-items: center;
    text-align: left;
    max-width: fit-content;
  }
}

::slotted(ion-icon) {
  stroke: hsl(var(--med-color-neutral-3));
  min-width: 24px;
  min-height: 24px;
  margin-bottom: 4px !important;
  transition: stroke 300ms ease-out;
}
@media (min-width: 992px) {
  ::slotted(ion-icon) {
    margin-bottom: 0;
    margin-right: 4px;
  }
}

::slotted(med-type) {
  --font-size: 10px;
  --line-height: 12px;
  --color: var(--color);
}

:host(.tab-selected) ::slotted(ion-icon) {
  stroke: var(--color-selected);
}

:host(.tab-disabled) {
  opacity: 1;
  color: hsl(var(--med-color-neutral-2)) !important;
}
:host(.tab-disabled) ::slotted(ion-icon) {
  stroke: hsl(var(--med-color-neutral-2)) !important;
}

:host(.ion-focused) ::slotted(ion-icon) {
  stroke: var(--color-focused);
}

@media (any-hover: hover) {
  a:hover {
    color: var(--color-hover);
  }
  a:hover ::slotted(ion-icon) {
    stroke: var(--color-hover);
  }

  :host(.tab-selected) a:hover {
    color: var(--color-selected);
  }
  :host(.tab-selected) a:hover ::slotted(ion-icon) {
    stroke: var(--color-selected);
  }
}
/* :host {
  --color: hsl(var(--med-color-neutral-3));
  --color-hover: hsl(var(--med-color-neutral-5));
  --color-focused: hsl(var(--med-color-neutral-5));
  --color-selected:hsl(var(--med-color-brand-4));
  --color-activated: hsl(var(--med-color-neutral-5));
  --background-focused: transparent;
  --background-focused-opacity: 1;
  --ripple-color: transparent;
  --padding-bottom:	8px;
  --padding-end: 4px;
  --padding-start: 4px;
  --padding-top: 8px;
  --color-icon: hsl(var(--med-color-neutral-3));
  --color-icon-hover: hsl(var(--med-color-neutral-5));
  --color-icon-focused: hsl(var(--med-color-neutral-5));
  --color-icon-selected:hsl(var(--med-color-brand-4));
  --color-icon-activated: hsl(var(--med-color-neutral-5));

  min-width: 0;
  max-width: 100%;
  justify-content: start;
  font-size: 12px;
  font-weight: 400;
  line-height: 12px;
  transition: color 300ms;

  @include breakpoint-up('sm') {
    --padding-bottom:	16px;
    --padding-end: 8px;
    --padding-start: 8px;
    --padding-top: 16px;

    flex-direction: row;
    justify-content: center;
    align-items: center;
    text-align: left;
  }
}

// icon
:host ::slotted(ion-icon) {
  min-height: 20px;
  min-width: 20px;
  max-width: initial;
  display: block;
  contain: unset;
  overflow: unset;
  stroke: var(--color-icon);
}

:host(.tab-layout-icon-top) ::slotted(ion-icon) {
  margin-top: 0;
  margin-bottom: 4px;

  @include breakpoint-up('sm') {
    margin-bottom: 0;
    margin-right: 6px;
  }
}

// label
:host ::slotted(ion-label) {
  text-overflow: initial;
  white-space: initial;
  overflow: initial;
}

:host(.tab-layout-icon-top) ::slotted(ion-label) {
  margin-top: 0;
  margin-bottom: 0;
}

// states
@media (any-hover: hover) {
  a:hover {
    color: var(--color-hover);

    ::slotted(ion-icon) {
      stroke: var(--color-icon-hover);
    }
  }
}

:host(.ion-focused) .button-native {
  color: var(--color-focused);

  &::after {
    background: var(--background-focused);
    opacity: var(--background-focused-opacity);
  }
}

:host(.ion-focused) {
  ::slotted(ion-icon) {
    stroke: var(--color-icon-focused);
  }
}

:host(.ion-activated) .button-native {
  color: var(--color-activated);
}

:host(.ion-activated) {
  ::slotted(ion-icon) {
    stroke: var(--color-icon-activated);
  }
}

:host(.tab-selected) {
  color: var(--color-selected);

  ::slotted(ion-icon) {
    stroke: var(--color-icon-selected);
  }

  @media (any-hover: hover) {
    a:hover {
      ::slotted(ion-icon) {
        stroke: var(--color-icon-hover);
      }
    }
  }
}

:host(.tab-disabled) {
  color: var(--color);
  opacity: 0.8;

  ::slotted(ion-icon) {
    stroke: (--color-icon);
    opacity: 0.8;
  }
}

 */